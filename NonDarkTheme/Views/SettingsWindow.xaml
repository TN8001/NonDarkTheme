<metro:MetroWindow
  x:Class="NonDarkTheme.Views.SettingsWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mag="clr-namespace:MagnificationWPF;assembly=MagnificationWPF"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
  xmlns:models="clr-namespace:NonDarkTheme.Models"
  xmlns:utility="clr-namespace:NonDarkTheme.Utility"
  xmlns:viewModels="clr-namespace:NonDarkTheme.ViewModels"
  Title="NonDarkTheme - Settings"
  Width="450"
  Height="450"
  BorderThickness="0"
  GlowBrush="Black"
  ResizeMode="CanResizeWithGrip"
  TitleCaps="False"
  WindowStartupLocation="CenterOwner">
  <metro:MetroWindow.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <DataTemplate DataType="{x:Type viewModels:MatrixValueViewModel}">
      <Border Padding="8">
        <Grid>
          <TextBox
            x:Name="Editable"
            materialDesign:HintAssist.Hint="{Binding Text}"
            utility:WheelIncrementBehavior.Use="True"
            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
            Visibility="{Binding IsEditable, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBox.Text>
              <Binding Path="Value">
                <Binding.ValidationRules>
                  <utility:FloatValueValidationRule ValidatesOnTargetUpdated="True" />
                </Binding.ValidationRules>
              </Binding>
            </TextBox.Text>
          </TextBox>
          <TextBox
            x:Name="ReadOnly"
            materialDesign:HintAssist.Hint="{Binding Text}"
            BorderBrush="{x:Null}"
            Focusable="False"
            IsReadOnly="True"
            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
            Text="{Binding Value}"
            Visibility="{Binding IsReadOnly, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
      </Border>
    </DataTemplate>

    <Style
      x:Key="MaterialDesignRadioButton2"
      BasedOn="{StaticResource MaterialDesignRadioButton}"
      TargetType="{x:Type RadioButton}">
      <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style
      x:Key="MaterialDesignGroupBox2"
      BasedOn="{StaticResource MaterialDesignGroupBox}"
      TargetType="{x:Type GroupBox}">
      <Setter Property="Margin" Value="5" />
      <Setter Property="Padding" Value="9,2" />
      <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="PrimaryLight" />
      <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2" />
      <Setter Property="BorderThickness" Value="0" />
    </Style>

  </metro:MetroWindow.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition />
    </Grid.RowDefinitions>
    <StackPanel Margin="4" Orientation="Horizontal">
      <RadioButton
        x:Name="tab_General"
        Margin="4"
        Content="General"
        IsChecked="True"
        Style="{StaticResource MaterialDesignTabRadioButton}" />
      <RadioButton
        x:Name="tab_ColorMatrix"
        Margin="4"
        Content="ColorMatrix"
        Style="{StaticResource MaterialDesignTabRadioButton}" />
      <RadioButton
        x:Name="tab_About"
        Margin="4"
        Content="About"
        Style="{StaticResource MaterialDesignTabRadioButton}" />
    </StackPanel>

    <!--  General  -->
    <ScrollViewer
      Grid.Row="1"
      Margin="10,0,10,10"
      Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=tab_General}">
      <StackPanel>
        <GroupBox Header="最前面制御:" Style="{DynamicResource MaterialDesignGroupBox2}">
          <StackPanel>
            <RadioButton
              Content="何もしない"
              IsChecked="{Binding Settings.ZOrder, Converter={StaticResource Enum2BooleanConverter}, ConverterParameter={x:Static mag:ZOrder.Nomal}}"
              Style="{StaticResource MaterialDesignRadioButton2}" />
            <RadioButton
              Content="常に最前面"
              IsChecked="{Binding Settings.ZOrder, Converter={StaticResource Enum2BooleanConverter}, ConverterParameter={x:Static mag:ZOrder.Topmost}}"
              Style="{StaticResource MaterialDesignRadioButton2}" />
            <RadioButton
              x:Name="radioButton_SpecificTitle"
              Content="特定タイトルで最前面"
              IsChecked="{Binding Settings.ZOrder, Converter={StaticResource Enum2BooleanConverter}, ConverterParameter={x:Static mag:ZOrder.SpecificTitle}}"
              Style="{StaticResource MaterialDesignRadioButton2}" />
            <TextBox
              Margin="24,0,0,0"
              IsEnabled="{Binding IsChecked, ElementName=radioButton_SpecificTitle}"
              Text="{Binding Settings.Titles, UpdateSourceTrigger=PropertyChanged}" />
          </StackPanel>
        </GroupBox>
        <GroupBox Header="フィルター:" Style="{DynamicResource MaterialDesignGroupBox2}">
          <StackPanel>

            <RadioButton
              Content="ノーマル"
              IsChecked="{Binding Settings.InvertType, Converter={StaticResource Enum2BooleanConverter}, ConverterParameter={x:Static models:InvertType.Identity}}"
              Style="{StaticResource MaterialDesignRadioButton2}" />
            <RadioButton
              Content="反転１"
              IsChecked="{Binding Settings.InvertType, Converter={StaticResource Enum2BooleanConverter}, ConverterParameter={x:Static models:InvertType.Invert}}"
              Style="{StaticResource MaterialDesignRadioButton2}" />
            <RadioButton
              Content="反転２"
              IsChecked="{Binding Settings.InvertType, Converter={StaticResource Enum2BooleanConverter}, ConverterParameter={x:Static models:InvertType.Invert2}}"
              Style="{StaticResource MaterialDesignRadioButton2}" />
            <StackPanel Orientation="Horizontal">
              <RadioButton
                x:Name="radioButton_Custom"
                Content="カスタム"
                IsChecked="{Binding Settings.InvertType, Converter={StaticResource Enum2BooleanConverter}, ConverterParameter={x:Static models:InvertType.Custom}}"
                Style="{StaticResource MaterialDesignRadioButton2}" />
              <Button
                Height="Auto"
                Margin="24,0,0,0"
                Click="EditMatrixButton_Click"
                Content="編集"
                IsEnabled="{Binding IsChecked, ElementName=radioButton_Custom}"
                Style="{StaticResource MaterialDesignFlatButton}" />
            </StackPanel>
          </StackPanel>
        </GroupBox>
        <GroupBox Header="その他:" Style="{DynamicResource MaterialDesignGroupBox2}">
          <StackPanel>
            <CheckBox
              Content="マウス操作を透過する"
              IsChecked="{Binding Settings.WindowOptions, Converter={StaticResource FlagsEnumValueConverter}, ConverterParameter={x:Static models:WindowOptions.Penetration}}"
              Style="{StaticResource MaterialDesignCheckBox}" />
            <CheckBox
              Content="カーソルを表示する"
              IsChecked="{Binding Settings.WindowOptions, Converter={StaticResource FlagsEnumValueConverter}, ConverterParameter={x:Static models:WindowOptions.ShowMagnifiedCursor}}"
              Style="{StaticResource MaterialDesignCheckBox}" />
            <CheckBox
              Content="移動を同期しない"
              IsChecked="{Binding Settings.WindowOptions, Converter={StaticResource FlagsEnumValueConverter}, ConverterParameter={x:Static models:WindowOptions.PinnedView}}"
              Style="{StaticResource MaterialDesignCheckBox}" />
            <CheckBox
              Content="ツールバーを表示する"
              IsChecked="{Binding Settings.ShowToolBar}"
              Style="{StaticResource MaterialDesignCheckBox}" />
            <CheckBox
              Content="起動時に更新を確認する"
              IsChecked="{Binding Settings.UpdateCheck}"
              Style="{StaticResource MaterialDesignCheckBox}" />
            <WrapPanel Orientation="Horizontal">
              <Button
                Margin="5"
                Command="{Binding Source={x:Static utility:CommandHelper.OpenFolderCommand}}"
                CommandParameter="{x:Static utility:FolderType.Settings}"
                Content="設定ファイルフォルダを開く..." />
              <Button
                Margin="5"
                Command="{Binding Source={x:Static utility:CommandHelper.OpenFolderCommand}}"
                CommandParameter="{x:Static utility:FolderType.Assembly}"
                Content="インストールフォルダを開く..." />
            </WrapPanel>
          </StackPanel>
        </GroupBox>
      </StackPanel>
    </ScrollViewer>

    <!--  ColorMatrix  -->
    <ScrollViewer
      Grid.Row="1"
      Margin="10,0,10,10"
      Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=tab_ColorMatrix}">
      <GroupBox Header="カスタムフィルター:" Style="{DynamicResource MaterialDesignGroupBox2}">
        <ItemsControl ItemsSource="{Binding Matrix}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <UniformGrid Columns="5" Rows="5" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </GroupBox>
    </ScrollViewer>

    <!--  About  -->
    <Grid
      Grid.Row="1"
      Margin="10,0,10,10"
      Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=tab_About}">
      <ContentPresenter Content="{Binding ProductInfo}" />
    </Grid>
  </Grid>
</metro:MetroWindow>
